server:
  port: 8080

spring:
  application:
    name: core-gateway
  cloud:
    gateway:
      default-filters:
        # Apply rate limit filter globally for all routes
        - name: RequestRateLimiter
          args:
            # Number of tokens refreshed per second
            redis-rate-limiter.replenishRate: 10
            # Maximum number of tokens the bucket can hold
            redis-rate-limiter.burstCapacity: 20
            # Number of tokens consumed per request
            redis-rate-limiter.requestedTokens: 1
            # Reference to the KeyResolver bean
            key-resolver: "#{@compositeKeyResolver}"
      routes:
        # Identity Api Route Configuration
        - id: api_route
          uri: http://127.0.0.1:9000
          predicates:
            - Path=/api/oauth2/**, /api/oauth2-admin/**, /api/login, /api/logout, /api/.well-known/**, /api/userinfo
          filters:
            - StripPrefix=1
        
        # Identity Page Route Configuration
        - id: page_route
          uri: ${CORE_IDENTITY_SERVICE}:${CORE_IDENTITY_SERVICE_PORT}
          predicates:
            - Path=/oauth2-page/**
          filters:
            - StripPrefix=1

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${CORE_IDENTITY_SERVICE}:${CORE_IDENTITY_SERVICE_PORT}/.well-known/jwks.json

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
